character_string = input('')
new_character_string = set(character_string)
digits = [symbol for symbol in new_character_string if symbol.isdigit()]
print(f'{"".join(sorted(digits))}')


number_1 = int(input(''))
number_2 = int(input(''))
result = (3 * (number_1 + number_2) ** 3) + (275 * (number_2 ** 2)) - (127 * number_1) - 41
print(result)

# number = int(input())
# print(f'Следующее за числом {number} число: {number + 1} ')
# print(f'Для числа {number} предыдущее число: {number - 1} ')

number = int(input())
print('Следующее за числом', number, 'число:', number + 1)
print('Для числа', number, 'предыдущее число:', number - 1)

monitor = int(input(''))
system_unit = int(input(''))
keyboard = int(input(''))
mouse = int(input(''))
summa = (monitor + system_unit + keyboard + mouse) * 3
print(summa)

number_1 = int(input(''))
number_2 = int(input(''))
summa = number_1 + number_2
difference = number_1 - number_2
multiplication = number_1 * number_2
print(f'{number_1} + {number_2} = {summa}')
print(f'{number_1} - {number_2} = {difference}')
print(f'{number_1} * {number_2} = {multiplication}')

a_1 = int(input(''))
d = int(input(''))
n = int(input(''))
result = a_1 + (d * (n - 1))
print(result)


number_1 = int(input(''))
print(f'{number_1}---{number_1 * 2}---{number_1 * 3}---{number_1 * 4}---{number_1 * 5}')


b = int(input(''))
q = int(input(''))
n = int(input(''))
bn = b * (q ** (n - 1))
print(bn)

pupils = int(input(''))
tangerines = int(input(''))
result_1 = tangerines // pupils
result_2 = tangerines % pupils
print(f'{result_1}')
print(f'{result_2}')


population = int(input(''))  # Вариант без условного оператора
number_survivors = population % 2 + population // 2
print(f'{number_survivors}')

population = int(input(''))
number_survivors = ((population + 1) // 2 if population % 2 != 0 else population // 2)
print(f'{number_survivors}')


# TODO Номер купе
# В купейном вагоне имеется 9 купе с четырьмя местами для пассажиров в каждом. Напишите программу, которая
# определяет номер купе, в котором находится место с заданным номером (нумерация мест сквозная, начинается с 1).

number = int(input(''))
compartment_number = (- number // 4) * -1
print(f'{compartment_number}')


# TODO Пересчет временного интервала
# Напишите программу для пересчёта величины временного интервала, заданного в минутах, в величину, выраженную в часах
# и минутах.
# Формат входных данных
# На вход программе подаётся целое число – количество минут.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

number = int(input(''))
hour = number // 60
minute = number % 60
print(f'{number} мин - это {hour} час {minute} минут.')

# TODO Трехзначное число
# Напишите программу, в которой рассчитывается сумма и произведение цифр положительного трёхзначного числа.

number = int(input(''))
summa = (number // 100) + ((number // 10) % 10) + (number % 10)
product = (number // 100) * ((number // 10) % 10) * (number % 10)
print(f'Сумма цифр = {summa}')
print(f'Произведение цифр = {product}')


# TODO Перестановка цифр
# Дано трехзначное число abc в котором все цифры различны. Напишите программу, которая выводит шесть чисел, образованных
# при перестановке цифр заданного числа.
# Формат входных данных
# На вход программе подаётся положительное трёхзначное целое число, все цифры которого различны.
# Формат выходных данных
# Программа должна вывести шесть чисел, образованных при перестановке цифр заданного числа в следующем порядке:
# abc,acb,bac,bca,cab,cba.

number = int(input(''))
number_2 = ((number // 100) * 10 + (number % 10)) * 10 + (number // 10 % 10)
number_3 = ((number // 10 % 10) * 10 + (number // 100)) * 10 + (number % 10)
number_4 = ((number // 10 % 10) * 10 + (number % 10)) * 10 + (number // 100)
number_5 = ((number % 10) * 10 + (number // 100)) * 10 + (number // 10 % 10)
number_6 = ((number % 10) * 10 + (number // 10 % 10)) * 10 + (number // 100)
print(f'{number}')
print(f'{number_2}')
print(f'{number_3}')
print(f'{number_4}')
print(f'{number_5}')
print(f'{number_6}')


# TODO Четырёхзначное число
# Напишите программу для нахождения цифр четырёхзначного числа.
# Формат входных данных
# На вход программе подаётся положительное четырёхзначное целое число.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

number = int(input(''))  # 3281
thousands = number // 1000
hundreds = number // 100 % 10
dozens = number % 100 // 10
units = number % 10
print(f'Цифра в позиции тысяч равна {thousands}')
print(f'Цифра в позиции сотен равна {hundreds}')
print(f'Цифра в позиции десятков равна {dozens}')
print(f'Цифра в позиции единиц равна {units}')

number = input('')
print(f'Цифра в позиции тысяч равна {number[0]}')
print(f'Цифра в позиции сотен равна {number[1]}')
print(f'Цифра в позиции десятков равна {number[2]}')
print(f'Цифра в позиции единиц равна {number[3]}')


# TODO Звездный прямоугольник
# Напишите программу, которая выводит прямоугольник, по периметру состоящий из звездочек (*).
# Примечание. Высота и ширина прямоугольника равны 44 и 1717 звёздочкам соответственно.

print('*' * 17, '*' + ' ' * 15 + '*', '*' + ' ' * 15 + '*', '*' * 17, sep='\n')


# TODO Сумма квадратов VS квадрат суммы
# Напишите программу, которая считывает два целых числа aa и bb и выводит на экран квадрат суммы (a+b)^2(a+b)2 и сумму
# квадратов a^2+b^2a  2+b2 этих чисел.
# Формат входных данных
# На вход программе подаётся два целых числа, каждое на отдельной строке.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием.

a = int(input(''))
b = int(input(''))
sum_squared = (a + b) ** 2
sum_of_squares = (a ** 2) + (b ** 2)
print(f'Квадрат суммы {a} и {b} равен {sum_squared}')
print(f'Сумма квадратов {a} и {b} равна {sum_of_squares}')

# TODO Большое число
# Как известно, целые числа в языке Python не имеют ограничений, которые встречаются в других языках программирования.
# Напишите программу, которая считывает четыре целых положительных числа a, \, b, \, ca,b,c и dd и выводит на экран
# значение выражения a^b + c^da b+cd.
# Формат входных данных
# На вход программе подаётся четыре целых положительных числа a, \, b, \, ca,b,c и dd , каждое на отдельной строке в
# указанном порядке.
# Формат выходных данных
# Программа должна вывести значение a^b + c^da b+cd.

a, b, c, d = int(input('')), int(input('')), int(input('')), int(input(''))
result = (a ** b) + (c ** d)
print(f'{result}')


# TODO Размножение n-ок
# Напишите программу, которая считывает целое положительное число n, \, n \in [1; \, 9]n,n∈[1;9] и выводит значение
# числа n+\overline{nn}+\overline{nnn}n+nn+nnn.
# Формат входных данных
# На вход программе подаётся одно целое положительное число n, \, n \in [1; \, 9]n,n∈[1;9].
# Формат выходных данных
# Программа должна вывести число n+\overline{nn}+\overline{nnn}n+nn+nnn.
# Примечание. Для первого теста 1 + 11 + 111 = 1231+11+111=123.

number = int(input(''))
result = (number * 100) + (number * 20) + (number * 3)
print(f'{result}')


num = int(input())
last_digit = num % 10    # последняя цифра числа
first_digit = num // 10  # первая цифра числа

if last_digit == first_digit:
    print('ДА')
else:
    print('НЕТ')

num1, num2, num3 = int(input()), int(input()), int(input())
counter = 0  # переменная счётчик
if num1 % 2 == 0:
    counter = counter + 1  # увеличиваем счётчик на 1
if num2 % 2 == 0:
    counter = counter + 1  # увеличиваем счётчик на 1
if num3 % 2 == 0:
    counter = counter + 1  # увеличиваем счётчик на 1
print(counter)


number = int(input(''))
result = (print('ДА') if (number // 1000) + (number % 10) == (number % 1000 // 100) - (number % 100 // 10)
          else print('НЕТ'))


number = int(input(''))
result = (print('Доступ разрешен') if number >= 18 else print('Доступ запрещен'))


# TODO Арифметическая прогрессия
# Напишите программу, которая определяет, являются ли три заданных числа (в указанном порядке) последовательными
# членами арифметической прогрессии.
# Формат входных данных
# На вход программе подаются три числа, каждое на отдельной строке.
# Формат выходных данных
# Программа должна вывести «YES» или «NO» (без кавычек) в соответствии с условием задачи.
# Формула b == (a+c)/2

number_1, number_2, number_3 = int(input('')), int(input('')), int(input(''))
result = (print('YES') if number_2 == (number_1 + number_3) / 2 else print('NO'))


# TODO Наименьшее из двух чисел
# Напишите программу, которая определяет наименьшее из двух чисел.
# Формат входных данных
# На вход программе подаётся два различных целых числа.
# Формат выходных данных
# Программа должна вывести наименьшее из двух чисел.

number_1, number_2, = int(input('')), int(input(''))
print(min(number_1, number_2))

number_1, number_2, = int(input('')), int(input(''))
result = (print(number_2) if number_1 > number_2 else print(number_1))

number_1, number_2, number_3, number_4 = int(input('')), int(input('')), int(input('')), int(input(''))
print(min(number_1, number_2, number_3, number_4))


number_1, number_2, number_3, number_4 = int(input('')), int(input('')), int(input('')), int(input(''))
if number_1 < number_2:
    x = number_1
else:
    x = number_2
if number_3 < number_4:
    y = number_3
else:
    y = number_4
if x < y:
    print(x)
else:
    print(y)


# TODO Возрастная группа
# Напишите программу, которая по введённому возрасту пользователя сообщает, к какой возрастной группе он относится:
# до 13 включительно – детство;
# от 14 до 24 – молодость;
# от 25 до 59 – зрелость;
# от 60 – старость.
# Формат входных данных
# На вход программе подаётся одно целое число – возраст пользователя.
# Формат выходных данных
# Программа должна вывести название возрастной группы.

age = int(input(''))
if age <= 13:
    print('детство')
elif 14 < age <= 24:
    print('молодость')
elif 25 <= age <= 59:
    print('зрелость')
else:
    print('старость')


# TODO Только + 🌶️
# Напишите программу, которая считывает три числа и подсчитывает сумму только положительных чисел.
# Формат входных данных
# На вход программе подаются три целых числа.
# Формат выходных данных
# Программа должна вывести одно число – сумму положительных чисел.
# Примечание. Если положительных чисел нет, то следует вывести 0.

number_1, number_2, number_3 = int(input('')), int(input('')), int(input(''))
counter = 0
if number_1 > 0:
    counter += number_1
if number_2 > 0:
    counter += number_2
if number_3 > 0:
    counter += number_3
print(counter)


# TODO Какое значение
# будет выведено на экран после выполнения следующей программы, если с клавиатуры введено число 7?

a = int(input())
if 2 <= a <= 17:
    b = 3
    p = a * a + b * b
else:
    b = 5
p = (a + b) * (a + b)
print(p)

# TODO Задача 1. Напишите программу, которая определяет, является ли заданное натуральное число трёхзначным.
# Решение. Программа, решающая поставленную задачу, может иметь следующий вид:

num = int(input())
if 100 <= num <= 999:     # num >= 100 and num <= 999
    print('Число является трёхзначным')
else:
    print('Число не является трёхзначным')


# TODO Задача 2. Напишите программу, которая проверяет, что все три цифры натурального трёхзначного числа различны.
# Решение. Программа, решающая поставленную задачу, может иметь следующий вид:

num = int(input())
d3 = num % 10
print(d3)  # 3
d2 = num % 100 // 10
print(d2)  # 2
d1 = num // 100
print(d1)  # 1
if d3 != d2 and d3 != d1 and d2 != d1:
    print('Цифры различны')
else:
    print('Цифры не различны')


# TODO Задача 3. Напишите программу, которая по координатам точки, не лежащей на осях координат, определяет номер
# координатной четверти, в которой она находится.
# Решение. Программа, решающая поставленную задачу, может иметь следующий вид:
# Примечание. Обратите внимание: никакие два из четырёх условий не могут быть истинными одновременно.

x = int(input())
y = int(input())

if x > 0 and y > 0:
    print('1 четверть')
if x < 0 and y > 0:
    print('2 четверть')
if x < 0 and y < 0:
    print('3 четверть')
if x > 0 and y < 0:
    print('4 четверть')


# TODO Принадлежность 1
# Напишите программу, которая принимает целое число xx и определяет, принадлежит ли данное число указанному промежутку.
# Формат входных данных
# На вход программе подаётся целое число xx.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

number = int(input())
if -1 < number < 17:
    print('Принадлежит')
else:
    print('Не принадлежит')


# TODO Принадлежность 2
# Напишите программу, которая принимает целое число xx и определяет, принадлежит ли данное число указанным промежуткам.
# Формат входных данных
# На вход программе подаётся целое число xx.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

number = int(input())
if -3 >= number or number >= 7:
    print('Принадлежит')
else:
    print('Не принадлежит')

number = int(input())
if not -3 < number < 7:
    print('Принадлежит')
else:
    print('Не принадлежит')

number = int(input())
if -30 < number <= -2 or 7 < number <= 25:
    print('Принадлежит')
else:
    print('Не принадлежит')


# TODO Красивое число 🌶️
# Назовем число красивым, если оно является четырехзначным и делится нацело на 77 или на 1717. Напишите программу,
# определяющую, является ли введённое число красивым. Программа должна вывести «YES», если число является красивым,
# или «NO» в противном случае.
# Формат входных данных
# На вход программе подаётся натуральное число.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

number = int(input())
if (999 < number <= 9999) and (number % 7 == 0 or number % 17 == 0):
    print('YES')
else:
    print('NO')


# TODO Неравенство треугольника
# Напишите программу, которая принимает три положительных числа и определяет, существует ли невырожденный
# треугольник с такими сторонами.
# Формат входных данных
# На вход программе подаётся три положительных целых числа.
# Формат выходных данных
# Программа должна вывести «YES» или «NO» в соответствии с условием задачи.
# Примечание. Треугольник существует, если выполняется неравенство треугольника.

numbers = [int(input()) for _ in range(3)]
result = ['YES' if max(numbers) < sum(numbers) - max(numbers) else 'NO']
print(''.join(result))


# TODO Високосный год
# Напишите программу, которая определяет, является ли год с данным номером високосным. Если год является високосным,
# то выведите «YES», иначе выведите «NO».
# Год является високосным, если его номер кратен 4, но не кратен 100, или если он кратен 400.
# Формат входных данных
# На вход программе подаётся натуральное число.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

years = int(input())
result = ['YES' if (years % 4 == 0 and years % 100 != 0) or (years % 400 == 0) else 'NO']
print(''.join(result))

years = int(input())
if (years % 4 == 0 and years % 100 != 0) or (years % 400 == 0):
    print('YES')
else:
    print('NO')


# TODO Ход ладьи
# Даны две различные клетки шахматной доски. Напишите программу, которая определяет, может ли ладья попасть с
# первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца
# и номер строки сначала для первой клетки, потом для второй клетки. Программа должна вывести «YES», если из первой
# клетки ходом ладьи можно попасть во вторую, или «NO» в противном случае.
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
# Примечание. Шахматная ладья ходит по горизонтали или вертикали.

first_move_1, first_move_2, second_move_1, second_move_2 = int(input()), int(input()), int(input()), int(input())
result = ['YES' if first_move_1 == second_move_1 or first_move_2 == second_move_2 else 'NO']
print(''.join(result))

# TODO Ход короля 🌶️
# Даны две различные клетки шахматной доски. Напишите программу,  которая определяет, может ли король попасть с первой
# клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер
# строки сначала для первой клетки, потом для второй клетки. Программа должна вывести «YES», если из первой клетки
# ходом короля можно попасть во вторую, или «NO» в противном случае.
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
# Примечание. Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку.

first_move_1, first_move_2, second_move_1, second_move_2 = int(input()), int(input()), int(input()), int(input())
if ((second_move_1 == first_move_1 or second_move_1 == first_move_1 + 1) or second_move_1 == first_move_1 - 1) and \
        (second_move_2 == first_move_2 + 1 or (second_move_2 == first_move_2) or (second_move_2 == first_move_2 - 1)):
    print('YES')
else:
    print('NO')


a, b, c, d = int(input()), int(input()), int(input()), int(input())
if (abs(a - c) <= 1) and (abs(b - d) <= 1):
    print('YES')
else:
    print('NO')
# 4
# 4
# 5
# 5

a, b, c, d = int(input()), int(input()), int(input()), int(input())
if (-1 <= a - c <= 1) and (-1 <= b - d <= 1):
    print('YES')
else:
    print('NO')


x = int(input())
y = int(input())
if x > 0:
    if y > 0:
        print('Первая четверть')
    else:
        print('Четвертая четверть')
else:
    if y > 0:
        print('Вторая четверть')
    else:
        print('Третья четверть')

# TODO Рассмотрим программу, которая переводит стобалльную оценку в пятибалльную. Для её реализации нужно
# воспользоваться вложенным условным оператором:

grade = int(input('Введите вашу отметку по 100-балльной системе: '))
if grade >= 90:
    print(5)
elif grade >= 80:
    print(4)
elif grade >= 70:
    print(3)
elif grade >= 60:
    print(2)
else:
    print(1)

# Запомни! Заключительный блок else в операторе if-elif-else является необязательным.

number_1, number_2, number_3 = int(input()), int(input()), int(input())
if number_1 == number_2 == number_3:
    print(3)
elif number_1 == number_2 != number_3 or number_1 != number_2 == number_3 or number_1 == number_3 != number_2:
    print(2)
else:
    print(0)


# TODO Гонка спидстеров
# Зум бросил вызов Флэшу и предложил ему честный поединок в виде гонки вокруг магнетара. В случае проигрыша эта
# нейтронная звезда зарядится и уничтожит мир, поэтому Флэш решил не рисковать без причины, и узнать у своего друга
# Циско Рамона есть ли смысл принимать вызов. Циско получил данные, что скорость Зума равна nn, а скорость
# Флэша равна kk.
# Напишите программу, которая должна вывести ответ Циско на вопрос Флэша.
# Формат входных данных
# На вход программе подаётся два целых числа nn и kk, скорость Зума и Флэша.
# Формат выходных данных
# Если Зум быстрее Флэша нужно вывести «NO», если Флэш быстрее Зума нужно вывести «YES», если их скорости равны
# нужно вывести "Don't know".

zoom_speed, flash_speed = int(input()), int(input())
if zoom_speed > flash_speed:
    print('NO')
elif flash_speed > zoom_speed:
    print('YES')
else:
    print("Don't know")


# TODO Вид треугольника
# Напишите программу, которая принимает три положительных числа и определяет вид треугольника, длины сторон
# которого равны введенным числам.
# Формат входных данных
# На вход программе подаются три числа – длины сторон существующего треугольника.
# Формат выходных данных
# Программа должна вывести на экран текст – вид треугольника («Равносторонний», «Равнобедренный» или «Разносторонний»).

side_length_1, side_length_2, side_length_3 = int(input()), int(input()), int(input())
if side_length_1 == side_length_2 != side_length_3 or side_length_1 == side_length_3 != side_length_2 or \
        side_length_3 == side_length_2 != side_length_1:
    print('Равнобедренный')
elif side_length_1 == side_length_2 == side_length_3:
    print('Равносторонний')
else:
    print('Разносторонний')


nums = set(int(input()) for _ in range(3))
print(["Равносторонний", "Равнобедренный", "Разносторонний"][len(nums) - 1])


